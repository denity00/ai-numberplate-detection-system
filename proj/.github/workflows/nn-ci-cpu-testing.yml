# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Nomeroff Net CI CPU Testing

on:
  workflow_dispatch:
  pull_request:
    branches: [  master, v4.0 ]
    paths:
      - 'nomeroff_net/**'
      - 'examples/ju/dataset_convertors/**'
      - 'examples/ju/dataset_tools/**'
      - 'examples/ju/inference/**'
      - 'examples/ju/train/**'
      - 'examples/py/inference/**'
      - 'examples/py/rest_examples/**'
  schedule:
    - cron: '10 0 * * *'  # Runs at 00:10 UTC every day

jobs:
  cpu-tests:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ 3.9.21, 3.10.16, 3.11.11 ]

    # Timeout: https://stackoverflow.com/a/59076067/4521646
    timeout-minutes: 120

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Note: This uses an internal pip API and may not always work
    # https://github.com/actions/cache/blob/master/examples.md#multiple-oss-in-a-workflow
    - name: Get pip cache
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip-

    - name: Install dependencies
      run: |

        sudo apt-get install libturbojpeg
        python -m pip install --upgrade pip

        pip install -qr requirements.txt -f https://download.pytorch.org/whl/cpu/torch_stable.html

        # extras
        pip install setuptools wheel pytest jupyter

        # fix AttributeError: module 'jinja2' has no attribute 'Markup'
        pip install mkdocs==1.2.4
        pip install jinja2==3.1

        python --version
        pip --version
        pip list
      shell: bash

    - name: Tests workflow
      run: |
        # test python inference examples
        python tutorials/py/inference/get-started-demo.py
        python tutorials/py/inference/get-started-tiny-demo.py
        python tutorials/py/inference/number-plate-filling-demo.py

        # test jupyter inference examples
        jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html tutorials/ju/inference/custom-options-model-demo.ipynb
        jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html tutorials/ju/inference/get-started-demo.ipynb
        jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html tutorials/ju/inference/get-started-tiny-demo.ipynb
        jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html tutorials/ju/inference/number-plate-filling.ipynb
        jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html tutorials/ju/inference/get-started-demo-ocr-custom.ipynb

        # test python benchmarks examples
        python tutorials/py/benchmark/accuracy-test.py
        python tutorials/py/benchmark/runtime-test.py

        # test jupyter benchmarks examples
        jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html tutorials/ju/benchmark/accuracy-test.ipynb
        jupyter nbconvert --ExecutePreprocessor.timeout=6000 --execute --to html tutorials/ju/benchmark/runtime-test.ipynb

        # test image loaders
        python3 nomeroff_net/image_loaders/base.py
        python3 -m nomeroff_net.image_loaders.dumpy_loader -f nomeroff_net/image_loaders/dumpy_loader.py
        python3 -m nomeroff_net.image_loaders.opencv_loader -f nomeroff_net/image_loaders/opencv_loader.py
        python3 -m nomeroff_net.image_loaders.pillow_loader -f nomeroff_net/image_loaders/pillow_loader.py
        python3 -m nomeroff_net.image_loaders.turbo_loader -f nomeroff_net/image_loaders/turbo_loader.py

        # test nnmodels
        python3 -m nomeroff_net.nnmodels.numberplate_classification_model -f nomeroff_net/nnmodels/numberplate_classification_model.py
        python3 -m nomeroff_net.nnmodels.numberplate_options_model -f nomeroff_net/nnmodels/numberplate_options_model.py
        python3 -m nomeroff_net.nnmodels.ocr_model -f nomeroff_net/nnmodels/ocr_model.py

        # test tools
        python3 nomeroff_net/tools/test_tools.py


      shell: bash
